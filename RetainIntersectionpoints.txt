import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;


public class RetainIntersectionPointBetweenWayPoints {
	
	public Map<String,List<WayInfoBean>> retainInterseactionPoints(Map<String,List<WayInfoBean>> rawWayPoints){
		
			
			List<WayInfoBean> coordinates = null;
			
			List<WayInfoBean> coordinatescloned = new ArrayList<WayInfoBean>();
			Map<String,List<WayInfoBean>> clonedrawWayPoints = new HashMap<String,List<WayInfoBean>>();

			List<WayInfoBean> retainedListWayPoints = new ArrayList<WayInfoBean>();
			Map<String,List<WayInfoBean>> retainedWayPoints = new HashMap<String,List<WayInfoBean>>();
			
			Set<String> roadName = rawWayPoints.keySet();
			
			for(String s : roadName){
				clonedrawWayPoints = rawWayPoints;
				coordinates = new ArrayList<WayInfoBean>();
				coordinates = rawWayPoints.get(s);
				Iterator itr = coordinates.iterator();
				
				while(itr.hasNext()){
					WayInfoBean info;
					 info = (WayInfoBean) itr.next();
					 Set<String> clonedRoadName =  rawWayPoints.keySet();
					    for(String str : clonedRoadName)
					    	if(s != str){
					    		coordinatescloned = clonedrawWayPoints.get(str);
					    		for(int i=0;i<coordinatescloned.size();i++){
					    			if( info.getLatitude() == coordinatescloned.get(i).getLatitude()){
					    				if( info.getLongitude() == coordinatescloned.get(i).getLongitude()){
					    					System.out.println(" wow it has entered here");
					    					retainedListWayPoints.add(info);
					    					retainedWayPoints.put(str,retainedListWayPoints);
					    					System.out.println("The entered coordinates is in the list and is mutually exclusive");
					    					
					    				}
					    		}
					    	}
				
						}
				}
			}
			
			
		return retainedWayPoints;
		
		
	}

}
